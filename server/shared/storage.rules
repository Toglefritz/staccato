rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Family photos and media - only family members can access
    match /families/{familyId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        isFamilyMember(familyId);
    }
    
    // User profile pictures - users can manage their own, family admins can manage others
    match /users/{userId}/profile/{fileName} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || isAuthorizedFamilyMember(userId));
      allow write: if request.auth != null && 
        (request.auth.uid == userId || isAuthorizedFamilyMember(userId));
    }
    
    // Helper functions
    function isFamilyMember(familyId) {
      let userDoc = firestore.get(/databases/(default)/documents/users/$(request.auth.uid));
      return userDoc.data.familyId == familyId;
    }
    
    function isAuthorizedFamilyMember(targetUserId) {
      let userDoc = firestore.get(/databases/(default)/documents/users/$(request.auth.uid));
      let targetUserDoc = firestore.get(/databases/(default)/documents/users/$(targetUserId));
      return userDoc.data.familyId == targetUserDoc.data.familyId &&
             userDoc.data.permissionLevel in ['primary', 'adult'];
    }
  }
}